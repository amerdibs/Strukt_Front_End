//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18046
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Mockup2.StruktWebservice {
    using System.Data;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="StruktWebservice.StruktUserSoap")]
    public interface StruktUserSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/HelloWorld", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string HelloWorld();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/HelloWorld", ReplyAction="*")]
        System.Threading.Tasks.Task<string> HelloWorldAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/checkLogin", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataTable checkLogin(string strName, string strPassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/checkLogin", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataTable> checkLoginAsync(string strName, string strPassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getProcessAll", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataTable getProcessAll();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getProcessAll", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataTable> getProcessAllAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface StruktUserSoapChannel : Mockup2.StruktWebservice.StruktUserSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class StruktUserSoapClient : System.ServiceModel.ClientBase<Mockup2.StruktWebservice.StruktUserSoap>, Mockup2.StruktWebservice.StruktUserSoap {
        
        public StruktUserSoapClient() {
        }
        
        public StruktUserSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public StruktUserSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public StruktUserSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public StruktUserSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string HelloWorld() {
            return base.Channel.HelloWorld();
        }
        
        public System.Threading.Tasks.Task<string> HelloWorldAsync() {
            return base.Channel.HelloWorldAsync();
        }
        
        public System.Data.DataTable checkLogin(string strName, string strPassword) {
            return base.Channel.checkLogin(strName, strPassword);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> checkLoginAsync(string strName, string strPassword) {
            return base.Channel.checkLoginAsync(strName, strPassword);
        }
        
        public System.Data.DataTable getProcessAll() {
            return base.Channel.getProcessAll();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> getProcessAllAsync() {
            return base.Channel.getProcessAllAsync();
        }
    }
}
